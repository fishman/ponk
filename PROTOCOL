/*

Each player sends when it has calculated either a bounce or a miss
('event') on its side. The ball moves deterministically in between
these events, and is corrected at an event if necessary. The entire
game state is sent at each event; i.e., the sides synchronise.

In addition, the paddle position is sent every (few?) frame(s).

A win must be agreed by both sides: when the winning score is reached
by *either* side, *each* side sends a win message (with 'me' meaning
the sending side) naming the score, and waits for the corresponding
win message from the other side. If they match the side sends a vote
for the result to the server; once a vote from each side is recved the
win is recorded and the result is sent to each.

# Protocol
# ! = send
# ? = recv

Start := !Register ?Start Game
Game := (!Move | ?Move | !Pos | ?Pos)* End
Move := {'event': 'move', 'data': State}
State := {'p1y': int, 'p2y': int, 'ball': Ball}
Ball := {'x': int, 'y': int, 'vx': int, 'vy': int}
End := !Win ?Win !Vote ?Result

Register := {'event': 'register', 'data': Name}
Name := string
Start := {'event': 'start', 'data': Player}
Player := {'name': string, 'wins': int}
Pos := {'event': 'pos', 'y': int}
Win := {'event': 'win', 'score': {'me': int, 'you': int}}

*/
